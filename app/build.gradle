apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
//apply plugin: 'findbugs'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion build_versions.target_sdk
  buildToolsVersion build_versions.build_tools
  defaultConfig {
    applicationId "com.leodeleon.popmovies"
    minSdkVersion build_versions.min_sdk
    targetSdkVersion build_versions.target_sdk
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  signingConfigs {
    release
  }
  compileOptions {
    sourceCompatibility build_versions.java
    targetCompatibility build_versions.java
  }
  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    buildTypes.each {
      it.buildConfigField 'String', 'MOVIE_DB_API_KEY', MovieDBApiKey
      it.buildConfigField 'String', 'GOOGLE_APIS_KEY', DeveloperConsoleApiKey
    }
  }
  configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
  androidExtensions {
    experimental = true
  }
  sourceSets {
    main {
      java{
        srcDirs += 'src/main/kotlin'
      }
      res{
        srcDirs =
            [
                'src/main/res/layouts/base',
                'src/main/res/layouts/items',
                'src/main/res/layouts/views',
                'src/main/res/layouts',
                'src/main/res'
            ]
      }
    }
  }
}

kapt {
  generateStubs = true
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation files('libs/YouTubeAndroidPlayerApi.jar')
  implementation deps.kotlin.stdlib
  //support
  implementation deps.support.appcompat
  implementation deps.support.v4
  implementation deps.support.constraint
  implementation deps.support.design
  implementation deps.support.recycler
  implementation deps.support.cardview
  implementation deps.support.customtabs
  //firebase
  implementation deps.google.firebase
  implementation deps.google.dagger
  implementation deps.google.daggerAndroid
  implementation deps.google.daggerAndroidSupport
  kapt deps.kapt.dagger
  kapt deps.kapt.daggerAndroid
  implementation deps.arch.lifecycle
  kapt deps.kapt.lifecycle
  implementation deps.arch.room
  implementation deps.arch.roomRx
  kapt deps.kapt.room
  //networking
  implementation deps.net.moshi
  implementation deps.net.retrofit
  implementation deps.net.retrofitMoshi
  implementation deps.net.retrofitRx
  implementation deps.net.okhttp
  implementation deps.net.okhttpLogging
  implementation deps.net.glide
  implementation deps.net.tmdb
  kapt deps.kapt.glide
  //rx
  implementation deps.rx.rxjava
  implementation deps.rx.rxandroid
  implementation deps.rx.rxBindings
  implementation deps.rx.rxBindingsSupport
  implementation deps.rx.rxBindingsDesign
  implementation deps.rx.rxBindingsAppCompat
  implementation deps.rx.rxBindingsRecycler
  implementation deps.util.timber
  implementation deps.debug.stetho
  implementation (deps.track.crashlytics) { transitive = true }
  //custom views
  implementation 'net.opacapp:multiline-collapsingtoolbar:1.3.1'
  implementation 'com.jpardogo.materialtabstrip:library:1.1.1'
  implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7@aar'
  implementation 'com.robertlevonyan.view:MaterialChipView:1.0.1'
  implementation 'org.apmem.tools:layouts:1.10@aar'

  testImplementation deps.kotlin.stdlib
  testImplementation deps.test.mockito
  androidTestImplementation deps.test.mockitoAndroid
  testImplementation deps.test.junit
  androidTestImplementation(deps.test.espresso, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}

apply plugin: 'com.google.gms.google-services'
//apply from: "${rootDir}/config/codequality-findbugs.gradle"
//apply from: "${rootDir}/config/codequality-pmd.gradle"
repositories {
  mavenCentral()
}
